!function(){"use strict";var e="";const t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.classList.remove(r.inactiveButtonClass),t.disabled=!1)},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var a=e+"d3610e9c6dce3cb370d8.svg",s=e+"2fc47fd8e9a9bcd9612f.jpg",c=e+"d38272e02bb4f1ab1c37.svg",l=e+"40608da7369d39bc1077.svg",i=e+"d73f076c46eb5467f5fc.svg";const d=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}postCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}handleLike(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"1810d547-91a3-4cf2-9027-84faa0c5dd2e","Content-Type":"application/json"}});d.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{H(e),function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=H(e);N[t](r)}(e)})),v.textContent=r.name,h.textContent=r.about,u.src=r.avatar})).catch((e=>{console.error(e)})),document.getElementById("logo-svg").src=a;const u=document.getElementById("avatar");u.src=s,document.getElementById("pencil-svg").src=c,document.getElementById("new_post-svg").src=l,document.getElementById("pencil-avatar").src=i;const m=document.querySelectorAll(".modal__close-button"),_=document.querySelector(".profile__edit-button"),v=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),f=document.querySelector("#edit-modal"),y=document.forms["edit-profile-form"],p=f.querySelector(".modal__button"),b=(f.querySelector(".modal__close-button"),f.querySelector("#profile-name-input")),S=f.querySelector("#profile-description-input"),E=document.querySelector(".profile__avatar-btn"),q=document.querySelector("#avatar-modal"),g=q.querySelector(".modal__form"),C=q.querySelector("#profile-pic-input"),k=q.querySelector(".modal__button"),L=document.querySelector("#card-delete-modal"),x=L.querySelector(".modal__form"),$=(L.querySelector("#delete-submit"),document.querySelector(".profile__new-post-button")),U=document.querySelector("#new-post-modal"),j=document.forms["new-post-form"],A=U.querySelector(".modal__button"),I=(U.querySelector(".modal__close-button"),U.querySelector("#new-post-link-input")),w=U.querySelector("#new-post-caption-input"),P=document.querySelector("#preview-modal"),B=(P.querySelector(".modal__close-button"),P.querySelector(".modal__image")),D=P.querySelector(".modal__caption"),T=document.querySelector("#card-template"),N=document.querySelector(".cards__list");let O,J;function H(e){const t=T.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return r.textContent=e.name,o.setAttribute("src",e.link),o.setAttribute("alt",e.alt),e.isLiked&&n.classList.add("card__like-button_liked"),n.addEventListener("click",(t=>function(e,t,r){d.handleLike(t,r).then((()=>{e.target.classList.toggle("card__like-button_liked")})).catch((e=>{console.error(e)}))}(t,e._id,e.isLiked))),a.addEventListener("click",(r=>function(e,t){O=e,J=t,M(L)}(t,e._id))),o.addEventListener("click",(()=>{M(P),B.src=e.link,D.textContent=e.name,B.alt=e.alt})),t}function z(e){"Escape"===e.key&&F(document.querySelector(".modal_opened")),e.target.classList.contains("modal")&&F(e.target)}function M(e){e.classList.add("modal_opened"),document.addEventListener("keydown",z),e.addEventListener("mousedown",z)}function F(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",z),e.removeEventListener("mousedown",z)}var G;_.addEventListener("click",(()=>{var e;b.value=v.textContent,S.value=h.textContent,e=y,[b,S].forEach((r=>{t(e,r,n)})),M(f)})),m.forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>F(t)))})),y.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;t.textContent="Saving...",d.editUserInfo({name:b.value,about:S.value}).then((e=>{v.textContent=e.name,h.textContent=e.about,F(f),o(p,n)})).catch((e=>{console.error(e)})).finally((()=>{t.textContent="Save"}))})),j.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;t.textContent="Saving...",d.postCard({name:w.value,link:I.value}).then((t=>{const r=H(t);N.prepend(r),F(U),e.target.reset(),o(A,n)})).catch((e=>{console.error(e)})).finally((()=>{t.textContent="Save"}))})),g.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;t.textContent="Saving...",d.editUserAvatar({avatar:C.value}).then((t=>{u.src=t.avatar,F(q),e.target.reset(),o(k,n)})).catch((e=>{console.error(e)})).finally((()=>{t.textContent="Save"}))})),x.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;t.textContent="Deleting...",d.deleteCard(J).then((()=>{O.remove(),F(L)})).catch((e=>{console.error(e)})).finally((()=>{t.textContent="Delete"}))})),$.addEventListener("click",(()=>{M(U)})),E.addEventListener("click",(()=>{M(q)})),G=n,Array.from(document.querySelectorAll(G.formSelector)).forEach((e=>{((e,a)=>{const s=Array.from(e.querySelectorAll(a.inputSelector)),c=e.querySelector(a.submitButtonSelector);r(s,c,a),e.addEventListener("reset",(()=>{o(c,a)})),s.forEach((o=>{o.addEventListener("input",(function(){((e,r)=>{r.validity.valid?t(e,r,n):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,r,r.validationMessage,n)})(e,o),r(s,c,a)}))}))})(e,G)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,